package main.topic;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class TopicService {
	
	@Autowired
	private TopicRepository topicRepository;
	
	private List<Topic> topics = new ArrayList<Topic>(Arrays.asList(
			new Topic(1, "Angular", "Old JS Framework"),
			new Topic(2, "React", "Current JS Framework"),
			new Topic(3, "Vue", "New JS Framework")
			));
	
	public List<Topic> getAllTopics() {
		List<Topic> topics = new ArrayList<>();
		topicRepository.findAll().forEach(topics::add);
		return topics;
	}
	
	public Topic getTopic(int id) {
		return topics.stream().filter(t -> t.getId() == (id)).findFirst().get();
	}
	
	public void addTopic(Topic topic) {
		topics.add(topic);
	}
	
	public void updateTopic(Topic topic, int id) {
		topics.stream().filter(t -> t.getId() == (id)).findFirst().get();
		for(int i = 0; i< topics.size(); i++) {
			Topic t = topics.get(i);
			if(t.getId() == (id)) {
				topics.set(i, topic);
				return;
			}
		}
	}

	public void deleteTopic(int id) {
		topics.removeIf(t -> t.getId() == (id));
	}
}
